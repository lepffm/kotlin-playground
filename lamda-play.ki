fun testS() { listOf("Hello","hello").forEach{ println(it)}  }

// return lamda function
fun lamReturnFn(comp: String) = { input: String -> input==comp}

// lamda function parameter
fun testService(nameFilterFn: (String) -> Boolean = {true}) = listOf("Hello","hello","hellO").filter( nameFilterFn).forEach{ println(it)}
// multiple lamda function parameters 
fun testSFn2( nameFilterFn: (String) -> Boolean={true}, eachFn: (String) -> Unit={}) { 
    listOf("Hello","hello").filter(nameFilterFn).forEach{ it -> eachFn(it) ;  println(it)}  
}

fun main() {
   testService(){  it=="hello"}
   testService( nameFilterFn= { it=="hellO"})
   testService(){ it=="hellO"}
   testService(nameFilterFn= lamReturnFn("Hello"))
   testSFn2(nameFilterFn={it=="hello"}){ println("pre $it")}
   testSFn2(nameFilterFn={it=="hello"})
   testSFn2{println("pre2 $it")} // no filter, just forEach
   testSFn2()

}
